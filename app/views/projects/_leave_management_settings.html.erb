<% unless @project.module_enabled?(:leave_management) %>
  <h3>Please enable the Leave Management module first</h3>
<% else %>

  <p><%= link_to "New leave management rule", new_project_leave_management_rule_path(@project), :remote => true, :class => "icon icon-add" %></p>
  <p>Summary</p>
<table class="list">
<thead>
		<tr>
			<th>Sender</th>
			<th>Action</th>
			<th>Receiver</th>
			<th></th>
		<tr>
</thead>
<tbody> 

<% LeavesHolidaysManagements.actor_types_db.each do |receiver_type| %>
	<% LeaveManagementRule.actions.keys.each do |action| %>
		<% LeavesHolidaysManagements.actor_types_db.each do |sender_type| %>
			<% rules = LeaveManagementRule.where(project: @project, action: LeaveManagementRule.actions[action], sender_type: sender_type, receiver_type: receiver_type).includes(:sender, :receiver) %>
			<% rules_grouped = LeavesHolidaysManagements.regroup(rules.to_a.map{|r| [[r.sender], [r.receiver]]}) %>

			<% unless rules_grouped.empty? %>
				<% rules_grouped.each do |v| %>
					<tr>
						<td><%= v[0].join(", ") %></td>
						<td><%= action.humanize %></td>
						<td><%= v[1].join(", ") %></td>
						<% rule_ids = rules.select {|r| r.sender.in?(v[0]) && r.receiver.in?(v[1])}.map(&:id) %>
						<td><%= rule_ids %>
								<%= link_to "Edit", management_rules_edit_project_leave_management_rules_path(@project, :management_rule_ids => rule_ids), :remote => true, :class => "icon icon-edit" %>
						</td>
					</tr>
				<% end %>
			<% end %>


		<% end %>
	<% end %>
<% end %>


</tbody>			
</table>


<% end %>


<% unless @project.module_enabled?(:leave_management) %>
  <h3>Please enable the Leave Management module first</h3>
<% else %>

  <p><%= link_to "New leave management rule", new_project_leave_management_rule_path(@project), :remote => true, :class => "icon icon-add" %></p>
  <p>Summary</p>
<table class="list">
<thead>
		<tr>
			<th>Sender</th>
			<th>Action</th>
			<th>Receiver</th>
			<th></th>
		<tr>
</thead>
<tbody> 

<% LeavesHolidaysManagements.actor_types_db.each do |receiver_type| %>
	<% LeaveManagementRule.actions.keys.each do |action| %>
		<% LeavesHolidaysManagements.actor_types_db.each do |sender_type| %>
			<% management_rules = LeaveManagementRule.where(project: @project, action: LeaveManagementRule.actions[action], sender_type: sender_type, receiver_type: receiver_type).group_by(&:receiver) %>
			<% management_rules_reverse = LeaveManagementRule.where(project: @project, action: LeaveManagementRule.actions[action], sender_type: sender_type, receiver_type: receiver_type).group_by(&:sender) %>
			<tr>
				<td><%= management_rules.values.to_json %></td>
				<td></td>
				<td><%= management_rules_reverse.values.to_json %></td>
			</tr> 

			<% unless management_rules.empty? %>
				<% management_rules.each do |k,v| %>

					<tr>
						<td><%= v.map {|r| r.sender.name}.uniq.join(", ") %></td>
						<td><%= v.map {|r| r.action.humanize}.uniq.join(", ") %></td>
						<td><%= v.map {|r| r.receiver.name}.uniq.join(", ") %></td>
						<td><%= v.map(&:id) %></td>
					</tr>
				<% end %>
			<% end %>


		<% end %>
	<% end %>
<% end %>


</tbody>			
</table>


<% end %>